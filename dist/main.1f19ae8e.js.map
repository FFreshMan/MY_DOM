{"version":3,"sources":["main.js"],"names":["console","log","div","dom","create","after","test","empty","emm","attr","name","style","border","color","class","add","remove","has","on","div1","find","parent","s2","children","siblings","next","previous","each","travel","n","index"],"mappings":"AAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,IAAIC,GAAG,GAAGC,GAAG,CAACC,MAAJ,CAAW,gBAAX,CAAV;AACAD,GAAG,CAACE,KAAJ,CAAUC,IAAV,EAAgBJ,GAAhB;AACAC,GAAG,CAACI,KAAJ,CAAUC,GAAV;AACAL,GAAG,CAACM,IAAJ,CAASD,GAAT,EAAc,IAAd,EAAoB,MAApB;AACA,IAAIE,IAAI,GAAGP,GAAG,CAACM,IAAJ,CAASH,IAAT,EAAe,IAAf,CAAX;AACAN,OAAO,CAACC,GAAR,iBAAqBS,IAArB;AACAP,GAAG,CAACQ,KAAJ,CAAUL,IAAV,EAAgB;AAAEM,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAAhB;AACAb,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACQ,KAAJ,CAAUL,IAAV,EAAgB,OAAhB,CAAZ;AACAH,GAAG,CAACW,KAAJ,CAAUC,GAAV,CAAcT,IAAd,EAAoB,KAApB;AACAH,GAAG,CAACW,KAAJ,CAAUC,GAAV,CAAcT,IAAd,EAAoB,MAApB;AACAH,GAAG,CAACW,KAAJ,CAAUE,MAAV,CAAiBV,IAAjB,EAAuB,MAAvB;AACAN,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACW,KAAJ,CAAUG,GAAV,CAAcX,IAAd,EAAoB,MAApB,CAAZ;AACAH,GAAG,CAACe,EAAJ,CAAOZ,IAAP,EAAa,OAAb,EAAsB,YAAM;AAC1BN,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,CAFD;AAGA,IAAIkB,IAAI,GAAGhB,GAAG,CAACiB,IAAJ,CAAS,OAAT,EAAkB,CAAlB,CAAX;AACApB,OAAO,CAACC,GAAR,CAAYkB,IAAZ;AACAnB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACiB,IAAJ,CAAS,KAAT,CAAZ;AACApB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACkB,MAAJ,CAAWC,EAAX,CAAZ;AACAtB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACoB,QAAJ,CAAaC,QAAb,CAAZ,GACA;AACA;;AACAxB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACqB,QAAJ,CAAaF,EAAb,CAAZ;AACAtB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACsB,IAAJ,CAASH,EAAT,CAAZ;AACAtB,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACuB,QAAJ,CAAaJ,EAAb,CAAZ;AACAtB,OAAO,CAACC,GAAR,CACEE,GAAG,CAACwB,IAAJ,CAASxB,GAAG,CAACoB,QAAJ,CAAaK,MAAb,CAAT,EAA+B,UAAAC,CAAC,EAAI;AAClC1B,EAAAA,GAAG,CAACQ,KAAJ,CAAUkB,CAAV,EAAa,OAAb,EAAsB,KAAtB;AACD,CAFD,CADF;AAKA7B,OAAO,CAACC,GAAR,CAAYE,GAAG,CAAC2B,KAAJ,CAAUR,EAAV,CAAZ","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["console.log(\"hi\");\r\nlet div = dom.create(\"<div>222</div>\");\r\ndom.after(test, div);\r\ndom.empty(emm);\r\ndom.attr(emm, \"id\", \"emm1\");\r\nlet name = dom.attr(test, \"id\");\r\nconsole.log(`title:${name}`);\r\ndom.style(test, { border: \"1px solid red\", color: \"blue\" });\r\nconsole.log(dom.style(test, \"color\"));\r\ndom.class.add(test, \"red\");\r\ndom.class.add(test, \"blue\");\r\ndom.class.remove(test, \"blue\");\r\nconsole.log(dom.class.has(test, \"blue\"));\r\ndom.on(test, \"click\", () => {\r\n  console.log(\"点了\");\r\n});\r\nlet div1 = dom.find(\"#test\")[0];\r\nconsole.log(div1);\r\nconsole.log(dom.find(\"#s2\"));\r\nconsole.log(dom.parent(s2));\r\nconsole.log(dom.children(siblings));\r\n//由于我这里s2是唯一的所以我不用去找到他，如果不唯一则要用find找到他然后取[i]个\r\n// let SS=dom.find(\"#s2\")[0]然后把SS作为参数带入下面\r\nconsole.log(dom.siblings(s2));\r\nconsole.log(dom.next(s2));\r\nconsole.log(dom.previous(s2));\r\nconsole.log(\r\n  dom.each(dom.children(travel), n => {\r\n    dom.style(n, \"color\", \"red\");\r\n  })\r\n);\r\nconsole.log(dom.index(s2));\r\n"]}