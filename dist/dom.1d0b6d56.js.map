{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","removeChild","empty","array","x","push","console","log","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["//增-------------------------------------------------------------------------------\r\nwindow.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\");\r\n    //template是一个万能容器他不显示\r\n    container.innerHTML = string.trim();\r\n    //把字符串写入template的html中，trim是防止html前面有空格，作用是清除字符串两边空格\r\n    return container.content.firstChild;\r\n    //因为template.firstChild不能直接得到这个元素，所以用上面这个\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n    //只有前插这个接口，所以要对node的父节点去调用前插函数，把node2插到node后一个节点的前面\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n    //新增一个哥哥\r\n  },\r\n  append(parent, child) {\r\n    parent.appendChild(child);\r\n    //新增一个儿子\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    parent.appendChild(node);\r\n    //新增一个爸爸\r\n  },\r\n  //删-------------------------------------------------------------------------------\r\n  remove(node) {\r\n    //   node.remove() 有点新可能不支持\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    // const { childNodes } = node;\r\n    //childNodes=node.childNodes，这是是新语法，node.childNodes本身就是一个数组输出的\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(x));\r\n      x = node.firstChild;\r\n    }\r\n    console.log(array);\r\n  },\r\n  attr(node, name, value) {\r\n    //重载\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    }\r\n    if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n\r\n    //改变一个节点的属性\r\n  },\r\n  text(node, content) {\r\n    //适配\r\n    if (arguments.length === 3) {\r\n      if (innerText in node) {\r\n        node.textContent = content;\r\n      } else {\r\n        node.innerText = content;\r\n      }\r\n    } else if (arguments.length === 2) {\r\n      if (innerText in node) {\r\n        return node.textContent;\r\n      } else {\r\n        return node.innerText;\r\n      }\r\n    }\r\n    //这里是为了兼容ie，ie8不支持textContent\r\n    //直接把内部的所有东西包括其他的标签都覆盖了，如果想单独改某一部分则用单独标签包裹后调用\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 3) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 2) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      // dom.style(div,\"color\",\"red\")\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div,\"color\")想知道color的值\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        //想写入一个属性,注意这里Object大写\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  }, //改class\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    }\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  }, //scope用来指定在哪个标签里找\r\n  parent(node) {\r\n    return node.parentNode;\r\n  }, //父节点\r\n  children(node) {\r\n    return node.children;\r\n  }, //子节点\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter(n => n !== node);\r\n  }, //兄弟节点，得到的伪数组转化成数组，然后对其使用filter，把不等于自己的写入数组\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  }, //找到不是文本的下一个节点\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  }, //不是文本的前一个节点\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  }, //遍历\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    for (var i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  }\r\n};\r\n"]}